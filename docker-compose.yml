version: "3.9"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: scannerdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sa
    ports:
      - "5432:5432"
    restart: always

  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/scannerdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: sa
    restart: always

  scan-service:
    build:
      context: ./backend/scan-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - zap
    environment:
      ZAP_API_URL: http://zap:8090
    restart: always

  client-info-service:
    build:
      context: ./backend/client-info-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    restart: always

  report-service:
    build:
      context: ./backend/report-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    restart: always

  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - auth-service
      - scan-service
      - report-service
      - client-info-service
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    environment:
      - VITE_API_BASE_URL=http://api-gateway:8081
    restart: always

  zap:
    image: ghcr.io/zaproxy/zaproxy:stable
    command: >
      zap.sh -daemon -host 0.0.0.0 -port 8090
      -config api.disablekey=true
      -config 'api.addrs.addr.name=.*'
      -config 'api.addrs.addr.regex=true'
    ports:
      - "8090:8090"
    restart: always
